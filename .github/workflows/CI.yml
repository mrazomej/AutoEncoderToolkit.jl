name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          # - '1.9' # Uncomment when 1.10 is out. Replace this with the minimum Julia version that your package supports. 
          - '1'
        os: [ubuntu-latest]
        arch: [x64]
        include:
          - os: windows-latest
            version: '1'
            arch: x64
          - os: macOS-latest
            version: '1'
            arch: x64
    steps:
      - uses: actions/checkout@v4.1.3
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - name: "Run test without coverage report"
        uses: julia-actions/julia-runtest@v1
        if: ${{ !contains(fromJson('["1", "1.9"]'), matrix.version) || matrix.os != 'ubuntu-latest' }}
        continue-on-error: false
        with:
          coverage: false

      - name: "Run test with coverage report"
        uses: julia-actions/julia-runtest@v1
        if: contains(fromJson('["1", "1.9"]'), matrix.version) && matrix.os == 'ubuntu-latest'
        continue-on-error: false
      - uses: julia-actions/julia-processcoverage@v1
        if: contains(fromJson('["1", "1.9"]'), matrix.version) && matrix.os == 'ubuntu-latest'
        continue-on-error: false
      - uses: codecov/codecov-action@v4.5.0
        if: contains(fromJson('["1", "1.9"]'), matrix.version) && matrix.os == 'ubuntu-latest'
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}